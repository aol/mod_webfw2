whitelist-file = "/home/mthomas/whitelist.conf"
whitelist-log  = true

rule update_me {
	src_addrs = {
		/* start with something that will never match */
		255.255.255.255
	}
	action = deny
	log = true
}

rule rule01 {
	src_addrs = {
		192.168.0.0/24,
		192.168.1.0/24,
		172.16.0.0/16
	}
	match_string "some-data" {
		values = {
			abc,
			def,	
			ghi,
			jkl
		}
		regex = {
			"^tester$"
		}
	}
	match_string "__wf2-uri__" {
		values = {
			/do/something/here.html,
			/do/something/else.html
		}
	}
	action = deny
	log    = true
}

rule rule02 {
	// a simple rule that will match this payload and 
        // automatically place the source address in the 
        // update_me rule

	match_string "__wf2-uri__" {
		values = {
			/evil1.txt,
			/evil2.txt
		}
	}
	action      = permit
	update-rule = update_me
	log         = true
}

rule rule03 {
	src_addrs = {
		172.26.32.1/32,
		172.26.32.2/31
	}
	action = pass
	log    = true
}

rule rule04 {
	// match rule if the payload is NOT either good1.txt or good2.txt
	// and the source address is 5.5.5.5

	flow = "!match_string(__wf2-uri__) && match_src_addrs"

	src_addrs = {
		5.5.5.5/32
	}

	match_string __wf2-uri__ {
		values = {
			/good1.txt,
			/good2.txt
		}
	}

	action = deny
	log    = true
}

rule rule05 {
	// simple rule that will send data over to thrashd
	// if the uri is either tothrash.txt or tothrash.html
	match_string __wf2-uri__ {
		values = {
			/tothrash.txt,
			/tothrash.html
		}
	}

	action = thrash
	log    = true
}

rule rule06 {
	// simple rule to block user-agents that look like IE6
	match_string user-agent {
		regex = {
			".*MSIE 6\.[0-9]+.*Windows"
		}
	}
	action = deny
	log    = true
}

rule rule07 {
	// simple rule to show how logical OR's work
	// match the URI and the source address OR just match the string
	// user-agent
	flow = "match_string(__wf2-uri__) && match_src_addrs || match_string(user-agent)" 

	match_string __wf2-uri__ {
		values = {
			/blah02.html,
			/blah01.html
		}
	}

	match_string user-agent {
		regex = {
			".*bad-useragent$"
		}
	}

	src_addrs = {
		10.0.0.1/32,
		10.0.0.2/31
	}

	action = deny
	log    = true
} 
	


rule permit_rest {
	src_addrs = {
		0.0.0.0/0
	}
	action = permit
	log    = true
}
